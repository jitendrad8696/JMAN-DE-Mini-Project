{
	"name": "DF_Prep_Misumi_Data",
	"properties": {
		"folder": {
			"name": "DWH/02_Prep"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_SQL_Raw_Misumi",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "window3"
				},
				{
					"name": "filter3"
				},
				{
					"name": "select7"
				},
				{
					"name": "window4"
				},
				{
					"name": "filter4"
				},
				{
					"name": "select8"
				},
				{
					"name": "select9"
				},
				{
					"name": "select10"
				},
				{
					"name": "select11"
				},
				{
					"name": "window5"
				},
				{
					"name": "window6"
				},
				{
					"name": "filter5"
				},
				{
					"name": "select13"
				},
				{
					"name": "window8"
				},
				{
					"name": "select14"
				},
				{
					"name": "window9"
				},
				{
					"name": "join1"
				},
				{
					"name": "select15"
				},
				{
					"name": "join2"
				},
				{
					"name": "select16"
				},
				{
					"name": "join3"
				},
				{
					"name": "select17"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select18"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Department as string,",
				"          Category as string,",
				"          Subcategory as string,",
				"          {Department Code} as string,",
				"          {Category Code} as string,",
				"          {Category Name} as string,",
				"          {Search Category Code} as string,",
				"          {Series Code} as string,",
				"          {Series Name} as string,",
				"          {Brand Code} as string,",
				"          {Brand URL Code} as string,",
				"          {Brand Name} as string,",
				"          {Series Status} as string,",
				"          {Min Days to Ship} as integer,",
				"          {Max Days to Ship} as integer,",
				"          {Direct Cart Type} as string,",
				"          {Price Check Less Flag} as string,",
				"          {Recommend Flag} as string,",
				"          {Volume Discount Flag} as string,",
				"          {C Value Flag} as string,",
				"          {Stock Item Flag} as string,",
				"          {Display Standard Price Flag} as string,",
				"          {Discontinued Product Flag} as string,",
				"          {Misumi Flag} as string,",
				"          {Package Spec Flag} as string,",
				"          {Simple Flag} as string,",
				"          {Page View} as string,",
				"          {Prompt Delivery Flag} as string,",
				"          {Keyword Click Count} as string,",
				"          {Special Shipment Flag} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 select(mapColumn(",
				"          Department,",
				"          Category,",
				"          Subcategory,",
				"          {Series Name},",
				"          {Series Code},",
				"          {Brand Name},",
				"          {Brand Code},",
				"          {Series Status},",
				"          {Min Days to Ship},",
				"          {Max Days to Ship},",
				"          {Direct Cart Type},",
				"          {Recommend Flag},",
				"          {Discontinued Product Flag}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select9 window(over(Category),",
				"     asc(Category, true),",
				"     temp = rowNumber()) ~> window3",
				"window3 filter(temp==1) ~> filter3",
				"select1 select(mapColumn(",
				"          Department",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7",
				"select7 window(over(Department),",
				"     asc(Department, true),",
				"     temp = rowNumber()) ~> window4",
				"window4 filter(temp==1) ~> filter4",
				"filter4 select(mapColumn(",
				"          Department",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select8",
				"select1 select(mapColumn(",
				"          Department,",
				"          Category",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9",
				"filter3 select(mapColumn(",
				"          Department,",
				"          Category",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select10",
				"select1 select(mapColumn(",
				"          Department,",
				"          Category,",
				"          Subcategory",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select11",
				"select10 window(over(Department),",
				"     asc(Department, true),",
				"     {Category Count} = count(Category)) ~> window5",
				"select11 window(over(Subcategory),",
				"     asc(Subcategory, true),",
				"     temp = rowNumber()) ~> window6",
				"window6 filter(temp==1) ~> filter5",
				"filter5 select(mapColumn(",
				"          Department,",
				"          Category,",
				"          Subcategory",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select13",
				"select13 window(over(Department,",
				"          Category),",
				"     asc(Department, true),",
				"     {Subcategory Count} = count(Subcategory)) ~> window8",
				"select1 select(mapColumn(",
				"          Department,",
				"          Category,",
				"          Subcategory,",
				"          {Series Name},",
				"          {Series Code},",
				"          {Series Status}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select14",
				"select14 window(over(Department,",
				"          Category,",
				"          Subcategory),",
				"     asc(Department, true),",
				"     {Series Count} = count({Series Code})) ~> window9",
				"window9, window5 join(select14@Department == select10@Department",
				"     && select14@Category == select10@Category,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          Department = select14@Department,",
				"          Category = select14@Category,",
				"          Subcategory,",
				"          {Series Name},",
				"          {Series Code},",
				"          {Series Status},",
				"          {Series Count},",
				"          {Category Count}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select15",
				"select15, window8 join(select15@Department == select13@Department",
				"     && select15@Category == select13@Category",
				"     && select15@Subcategory == select13@Subcategory,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 select(mapColumn(",
				"          Department = select15@Department,",
				"          Category = select15@Category,",
				"          Subcategory = select15@Subcategory,",
				"          {Series Name},",
				"          {Series Code},",
				"          {Category Count},",
				"          {Subcategory Count},",
				"          {Series Count}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select16",
				"select16, select1 join(select16@Department == select1@Department",
				"     && select16@Category == select1@Category",
				"     && select16@Subcategory == select1@Subcategory",
				"     && select16@{Series Name} == select1@{Series Name}",
				"     && select16@{Series Code} == select1@{Series Code},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 select(mapColumn(",
				"          Department = select16@Department,",
				"          Category = select16@Category,",
				"          Subcategory = select16@Subcategory,",
				"          {Series Name} = select16@{Series Name},",
				"          {Series Code} = select16@{Series Code},",
				"          {Category Count},",
				"          {Subcategory Count},",
				"          {Series Count},",
				"          {Brand Code},",
				"          {Min Days to Ship},",
				"          {Max Days to Ship}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select17",
				"select17 derive({Avg Days to Ship} = ({Max Days to Ship}+{Min Days to Ship})/2) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          Department,",
				"          {Category Count},",
				"          Category,",
				"          {Subcategory Count},",
				"          Subcategory,",
				"          {Series Count},",
				"          {Series Code},",
				"          {Series Name},",
				"          {Brand Code},",
				"          {Min Days to Ship},",
				"          {Max Days to Ship},",
				"          {Avg Days to Ship}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select18"
			]
		}
	}
}